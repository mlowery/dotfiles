if _dot_is_zsh; then

    # begin copied from https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/key-bindings.zsh

    # Use emacs key bindings
    bindkey -e

    # Make sure that the terminal is in application mode when zle is active, since
    # only then values from $terminfo are valid
    if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init() {
        echoti smkx
    }
    function zle-line-finish() {
        echoti rmkx
    }
    zle -N zle-line-init
    zle -N zle-line-finish
    fi

    # start typing + [Up-Arrow] - fuzzy find history forward
    if [[ "${terminfo[kcuu1]}" != "" ]]; then
    autoload -U up-line-or-beginning-search
    zle -N up-line-or-beginning-search
    bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
    fi
    # start typing + [Down-Arrow] - fuzzy find history backward
    if [[ "${terminfo[kcud1]}" != "" ]]; then
    autoload -U down-line-or-beginning-search
    zle -N down-line-or-beginning-search
    bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
    fi

    # end copied from https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/key-bindings.zsh

    # https://stackoverflow.com/a/32340345
    # ⌘+←Delete to Send Hex Codes:
    # 0x18 0x7f
    bindkey "^X\\x7f" backward-kill-line
    # https://stackoverflow.com/a/22312856

    # https://stackoverflow.com/a/29403520
    bindkey "^X^_" redo

fi