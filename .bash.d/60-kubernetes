#if _dot_on_path kubectl; then
#	source <(kubectl completion bash)
#fi

kobj='clusterroles clusterrolebindings cs csr cm deploy ds ev ep hpa ing jobs limits no ns po psp pv pvc quota rolebindings roles rs rc secrets sa svc'

for k in $kobj; do
	alias kg$k="kubectl get $k"
	alias kd$k="kubectl describe $k"
	alias kdel$k="kubectl delete $k"
done

alias k='kubectl'
alias kg='kubectl get'
alias klog='kubectl logs'
alias kexec='kubectl exec'
alias kconfv='kubectl config view --minify'
alias kconfu='kubectl config use-context'
alias kconfcc='kubectl config current-context'
alias k='kubectl'
alias kc='kubectl create -f'


alias kjqnode="jq -r '.spec.nodeName'"
alias kjqnodes="jq -r '.items[].spec.nodeName'"

alias kjqip="jq -r '.status.podIP'"
alias kjqips="jq -r '.items[].status.podIP'"

# http://kubernetes.io/docs/user-guide/production-pods/#termination-message
function ktermmsg() {
    kubectl get po $1 -o go-template='{{range .status.containerStatuses}}{{.lastState.terminated.message}}{{end}}'
}

function ktermcode() {
    kubectl get po $1 -o go-template='{{range .status.containerStatuses}}{{.lastState.terminated.exitCode}}{{end}}'
}
